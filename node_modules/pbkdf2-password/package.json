{
  "_args": [
    [
      {
        "raw": "pbkdf2-password@^1.1.0",
        "scope": null,
        "escapedName": "pbkdf2-password",
        "name": "pbkdf2-password",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/Users/chencc/work/WebstormProjects/node-mqtt/node_modules/mosca"
    ]
  ],
  "_from": "pbkdf2-password@>=1.1.0 <2.0.0",
  "_id": "pbkdf2-password@1.2.1",
  "_inCache": true,
  "_location": "/pbkdf2-password",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/pbkdf2-password-1.2.1.tgz_1475150963333_0.2858180277980864"
  },
  "_npmUser": {
    "name": "matteo.collina",
    "email": "hello@matteocollina.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pbkdf2-password@^1.1.0",
    "scope": null,
    "escapedName": "pbkdf2-password",
    "name": "pbkdf2-password",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/mosca"
  ],
  "_resolved": "https://registry.npmjs.org/pbkdf2-password/-/pbkdf2-password-1.2.1.tgz",
  "_shasum": "9f74513a155fd38d4d6b5c8414d3955dd26ca6ee",
  "_shrinkwrap": null,
  "_spec": "pbkdf2-password@^1.1.0",
  "_where": "/Users/chencc/work/WebstormProjects/node-mqtt/node_modules/mosca",
  "author": {
    "name": "Matteo Collina",
    "email": "hello@matteocollina.com"
  },
  "bugs": {
    "url": "https://github.com/mcollina/pbkdf2-password/issues"
  },
  "dependencies": {
    "fastfall": "^1.2.3"
  },
  "description": "Easy salt/password creation for Node.js, extracted from Mosca",
  "devDependencies": {
    "chai": "^3.5.0",
    "mocha": "^3.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "9f74513a155fd38d4d6b5c8414d3955dd26ca6ee",
    "tarball": "https://registry.npmjs.org/pbkdf2-password/-/pbkdf2-password-1.2.1.tgz"
  },
  "gitHead": "170c735be649e353c19da0ffc585c22dd6b34c5a",
  "homepage": "https://github.com/mcollina/pbkdf2-password",
  "keywords": [
    "pbkdf2",
    "authentication"
  ],
  "license": "MIT",
  "main": "pbkdf2-password.js",
  "maintainers": [
    {
      "name": "matteo.collina",
      "email": "hello@matteocollina.com"
    }
  ],
  "name": "pbkdf2-password",
  "optionalDependencies": {},
  "readme": "# pbkdf2-password&nbsp;[![Build Status](https://travis-ci.org/mcollina/pbkdf2-password.svg?branch=master)](https://travis-ci.org/mcollina/pbkdf2-password)\n\nEasy salt/password creation for Node.js, extracted from\n[Mosca](http://npm.im/mosca).\n\nUsage\n-----\n\n```js\nvar bkfd2Password = require(\"pbkdf2-password\");\nvar hasher = bkfd2Password();\nvar assert = require(\"assert\");\nvar opts = {\n  password: \"helloworld\"\n};\n\nhasher(opts, function(err, pass, salt, hash) {\n  opts.salt = salt;\n  hasher(opts, function(err, pass, salt, hash2) {\n    assert.deepEqual(hash2, hash);\n\n    // password mismatch\n    opts.password = \"aaa\";\n    hasher(opts, function(err, pass, salt, hash2) {\n      assert.notDeepEqual(hash2, hash);\n      console.log(\"OK\");\n    });\n  });\n});\n```\n\nAPI\n---\n\n* <a href=\"#build\"><code>bkfd2Password<b></b></code></a>\n* <a href=\"#hasher\"><code><b>hasher()</b></code></a>\n\n<a name=\"build\">\n### bkfd2Password(options)\n\nCreates a new [hasher](#hasher) functions, with the specified options.\n\nOptions:\n\n * `saltLength`, the length of the random salt\n * `iterations`, number of pbkdf2 iterations\n * `keyLength`, the length of the generated keys\n * `digest`, the digest algorithm, default `'sha1'`\n\n<a name=\"hasher\">\n### hasher(opts, function(err, pass, salt, hash))\n\nHash a password, using a hash and the pbkd2\ncrypto module.\n\nOptions:\n - `password`, the password to hash.\n - `salt`, the salt to use, as a base64 string.\n\nIf the `password` is left undefined, a new\n10-bytes password will be generated, and converted\nto base64.\n\nIf the `salt` is left undefined, a new salt is generated.\n\nThe callback will be called with the following arguments:\n - the error, if something when wrong.\n - the password.\n - the salt, encoded in base64.\n - the hash, encoded in base64.\n\nLicense\n-------\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mcollina/pbkdf2-password.git"
  },
  "scripts": {
    "test": "mocha test.js"
  },
  "version": "1.2.1"
}
